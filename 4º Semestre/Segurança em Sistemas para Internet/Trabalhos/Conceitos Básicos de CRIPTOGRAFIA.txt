Olá pessoal fábio akita no último episódio eu tenho que responder à pergunta se computação quântica tem o potencial de acabar com os esquemas de segurança que usamos hoje eu mencionei coisas como rs ar ou a s eu imagino que não só iniciantes mas mesmo desenvolvedores de software que já têm alguma experiência em dificuldades de entender mesmo básico sobre fotografia cyber security é um tema 

 Gigante existem as tecnologias as ferramentas e os processos segurança da informação ou infosec uma pequena parte de cyber security foca mais na implementação e manutenção de processos e políticas de onde você vem a maioria das certificações muito de segurança é uma questão de procedimento porém essa parte me interessa muito pouco pelo menos por agora a idéia hoje é começar a explicar alguns dos jargões e conceitos para que você se confunda - quando 

 Estiver lidando com aspectos de segurança em particular com criptografia e vou repetir de novo porque é difícil explicar a dimensão dessa área que a gigante uma história longa muita matemática você pode dedicar sua vida inteira estudando só isso e ainda não saber tudo é um grande na real que até esse script que é só um mero resuminho eo gigante com isso tive que dividir em duas partes hoje vai ser a parte 1 e semana que vem 

 Termina na parte 2 em papel e caneta e se preparem porque vocês vão precisar lutar bastante coisa para estudarem mais detalhes depois e falando em segurança agora é uma boa hora para agradecer o patrocinador deste vídeo se você quer evitar que suas senhas sejam casadas ou evitar que o fbi descobriu o site de pornografia e bit torrent que você usa devia tá usando uma vpn e por que não nós dever e pn não não estou brincando esse episódio 

 Não é patrocinado pela norte defendeu com que a outra bp eni rola vinheta [Música] se eu fosse chutar eu diria que a maioria esmagadora dos programadores não pensa em segurança nem o mínimo que deviam sim você mesmo aí assistindo e eu também de vez em quando isso era sem 20 anos atrás e continua sendo assim hoje o que mudou é que nos últimos 15 anos pelo menos queremos freimark e práticas que todo mundo usa o gmail sem pensar e por 

 Causa disso muitos dos erros triviais foram evitados que você nem sabe disso por exemplo é o trivial e muito comum antigamente era qualificar manualmente comandos sql para banco de dados não estrague concatena ao que o usuário mandava de um formulário tipo de login por exemplo e mandar esse comando por bancos de dados como esse exemplo aqui do lado mas se o usuário fosse minimamente espertos nem precisa ser muito inteligente 

 Sabendo que é assim que o programador faz ele manda exatamente a estrela que se concatena nada em via outros comandos arbitrários de sql que o programador não estava esperando assim como nesse exemplo aqui do lado e pronto você tem um problema desse cowen jackson na sua aplicação praticamente todo framework web como um raio de ângulo a fé o asp.net e todos os outros hoje vem com algum tipo de rm que uma biblioteca de mapeamento objeto para relacional não só 

 Para uma pea tabelas com classe mas também fazer coisas como sanitização dos valores enviados por usuários daí a maioria de casos como ciclo em jackson são eliminados automaticamente além desse com jackson margem dos prémios competentes protege contra coisas como csrf e cross site request forgery 7 um hijra aqui replay ataques e muito mais se não fizer no mínimo essas coisas não é um bom framework mas como eu disse antes a maioria dos 

 Programadores não pensa tanto em segurança daí você lê em algum post de blog por exemplo pra em vez de deixar o rm geral o comando sql se você escrever o comando manualmente não usar nenhum rm pode ser que tenha mais performance e pronto você acabou de deixar de usar os mecanismos de segurança do framework pela promessa de performance isso é o mais comum programador é um bicho burro e não devia ser nós devemos servir 

 Ciência da computação cadê a ciência e ficar ouvindo promessas e implementando sem saber se funcionou não tem hora que o programador parece que está escolhendo dieta da moda na dúvida é melhor assumir primeiro que se freimark guia você para desenvolver de uma certa maneira deve ter razões para isso especialmente se usado por milhares de pessoas faz muitos anos entenda quais são essas razões antes de decidir não usar 

 Não estou falando de framework zinho hipster da moda que acabou de ser lançado bons freimark são como bons vinhos precisam de anos para amadurecer só que aí programa do iniciante tem mania de achar que sabe mais que as milhares de pessoas que gastaram milhares de horas homem amadurecendo frame que decide a eu fazer meu próprio freimark porque eu sei fazer melhor pronto você acabou de ganhar uma 

 Catástrofe esperando para acontecer o trabalho de um programador é conseguir desenvolver alguma coisa o mais rápido possível com a melhor qualidade possível e qualidade não é só funcionar como foi pedido como funcionar com a melhor performance com a melhor escalação unidade com a melhor segurança e ainda tendo a melhor manter na habilidade só que é impossível ter 100% de todas essas características não existe almoço de graça 

 O trabalho de um programador encontrar o meio do caminho entre todos esses parâmetros esse balanço de 3.1 de custo benefício não é simples aqui entra a experiência de ter trabalhado com os programadores mais experientes e de ter visto atrasos dificuldades de manutenção buracos de segurança e gargalos de performance na prática em diversos projetos diferente só porque alguma coisa roda não 

 Significa que ela funciona corretamente a maioria dos cursos e tutoriais se preocupa em fazer alguma coisa rodar mas não se preocupa com todos esses outros aspectos segurança performance escalabilidade produtividade e manter na habilidade por exemplo nos anos 90 quando todo mundo ainda estava aprendendo como programar para web não tinha freimark decentes lógico a web comercial tinha acabado de nascer não tinha boas práticas bem definidas como 

 Temos hoje então digamos que você quisesse fazer um site zinho com login página de produtos ou checkouts para colocar cartão de crédito como fazia simples um formulário html que dava post para um script pro php que receber a senha o cartão em gravar directo numa tabela no banco assim o banco insight eram instalados na mesma máquina porque esse recurso custavam caro e como quem programa site normalmente tinha e ainda tem pouco 

 Conhecimento de coisas como configuração de infra então estava tudo sem senha ou colocar a senha hardy kohl de no código desastre lógico na verdade eu não falei certo isso não é só em shiga mente todo iniciante começa fazendo exatamente desse mesmo jeito não importa a linguagem a diferença é que nos anos 90 todo mundo era iniciante ainda mais com o tempo fomos evoluindo e entenda isso como iniciante você não tem como saber até 

 Onde dá pra ele com isso você é iniciante mas não se preocupa parta do princípio que só porque você não sabe não quer dizer que não existe e só porque a roda não quer dizer que você fez certo o problema é um iniciante colocar um site produção sozinho até hoje quando eu clico em recuperar a senha tem site que mandar minhas em aberta no meio e meio em 2019 isso é ridículo uma coisa você está treinando e fazendo errado isso não tem 

 Problema faz parte do aprendizado outra coisa é achar que só porque fez - e de tutoriais já sabe tudo e colocar seus usuários em risco isso em responsabilidade como desculpa para iniciar alguns conceitos vamos pegar o exemplo de guardar senhas impõe teste ou seja em texto aberto uma tabela do banco de dados como eu disse que o amador faria se fizesse tudo do zero sem usar nenhum freimark vamos assumir que tem uma possibilidade real 

 Dessa tabela ser roubada por um hacker isso é muito mais comum do que você pensa empresas gigantes de linkedin até marcas famosas como se fora sites de relacionamentos como adultos friendly fire games como clash of kings e muito mais que você pode procurar no site ha'erbin owned já tiveram dados dos usuários expostos nesse site aliás você pode digitar seu email e ver se sua senha já foi exposta toda a tabela de senhas uma hora vai ser roubada nova 

 Questão disse é só uma questão de quando em segurança nunca só aqui existe segurança sempre parta do pressuposto do pior caso que os dados vão ser expostas mais cedo ou mais tarde em seu trabalho é garantir que seja o mais tarde possível a segunda coisa que alguém podia pensar pode ser ok não tem problema em seu ínclita senha antes de gravar no banco primeiro vou me entender o que significa 

 Encriptação em criptografia normalmente a gente está se referindo a uma encriptação simétrica de maneira bem simples pensa em uma função onde passamos algum texto e 16 grego como entrada ea saída é o texto bagunçado simétrico porque se passarmos o texto bagunçado de volta para a função com o mesmo segredo revertemos de volta o texto original isso é de criptação as primeiras versões de captação era a coisa mais simples que você podia 

 Imaginar trocar uma letra por outra ou simplesmente da shift e mover as letras para frente ou para trás como nos algoritmos isner ou hot 13 e se normalmente são usados em cursos introdutórios de criptografia tipo hello world por serem super triviais um cizre é basicamente um site de substituição primeiro escolhemos um valor de shift por exemplo dois pra ficar simples esse é o segredo então toda a letra a 2 pra frente viram ser toda a letra b vieram 

 De toda a letra senão f sempre dois pra frente e assim por diante a chave secreta esse valor de shift 2 uma forma de quebrar isso se você notar que se trata de algo parecido com algoritmos isa você pode tentar ver a força bruta que é tentar todos os 25 possíveis valores de shift já que o flamengo só tem 26 letras você pode facilmente tentar o a1 até descobrir no papel em poucos minutos outra forma é usar a análise de 

 Frequência por exemplo se eu sei que a mensagem original em inglês as letras que aparecem com mais freqüência na maioria das palavras são a letra e ou a digamos que na mensagem captada a letra que mais aparece é p eu podia chutar que originalmente é um e na verdade oxi foi de 11 letras se não funcionar e podia chutar com um ar e que o shift foi de 15 letras da em vez de tentar todas as 25 possibilidades na força bruta 

 Só duas ou três tentativas já seria suficiente veja aqui mesmo nesse exemplo simples podemos diminuir a dificuldade da força bruta de 25 tentativas para dois ou três quase dez vezes mais rápido qualquer tentativa de quebrar uma inquietação na pior das hipóteses é ver a força bruta mas com criptoanálise como esse exemplo básico mencionei aqui eu seja analisando a mensagem pintada que 

 Chamamos de safer text podemos usar a matemática mais precisamente estatística para diminuir as tentativas algumas ordens de grandeza o hot 13 é mais uma brincadeira ele é um caso especial do circo shift fixo de 13 letras aliás o cinza o original foi usado pelos romanos e por isso se chama cisa e assim como hot 13 também tinha um valor de shift fixos acho que em três ou cinco de qualquer forma uma coisa que tem que ficar muito claro o dado encriptado não 

 Pode compartilhar características com a mensagem original porque via criptanálise e conseguia inferir alguma informação ou outro caso clássico ensinado como introdução em criptanálise é o famoso site o enigma usado pelos alemães na segunda guerra que também era um site de substituição eu recomendo que dei uma procurada em canais como não buffay o que explica ele em mais detalhes mas o equipamento era tipo uma máquina de escrever onde cada letra que 

 Você teclava devolver uma outra letra qualquer uma das outras 25 letras do alfabeto - ele mesmo ele não substitui todo a pela mesma letra toda vez cada há no texto é virar uma letra diferente a máquina é configurada conectando pares de letras no que se chama de plano board e configurando 3 rotores um refletor que fazia o embaralhamento sem entrar em detalhes se você souber a configuração desse pano board dos rotores e do 

 Refletor daí você conseguir reverter a mensagem entre pitada o grande erro dos alemães e o grande insight de alan turing foi notar que todo dia de manhã os alemães mandavam relatório do tempo e todo o relatório começava com as mesmas palavras no topo da mensagem tipo tempo que seria verde em alemão e terminava com o hitler daí ele entendeu que apesar das letras ser embaralhadas 

 A mesma lei nunca virava ela mesma então você conseguia chutar os pares de letras no clube board e tentando decifrar a letra a letra mas uma hora da ferradura porque o próximo par tony dia com o que você já tinha achado que sabia então precisava começar de novo mas como as letras nunca voltavam pra elas mesmas a kombi na tora inteira de todos os padres que você testou podia ser descartada e só testar outra combinação 

 Inicial diferente dos pares que você já tentou e era isso que fazia a máquina que eu tô em construir o tal bomb se você já viu uma foto parecendo uma estante com vários motores a cada rotação ele vai tentando um espaço de combinações não funcionando descarta o espaço inteiro e tenta de novo o que sobrar é a resposta certa e ele conseguia achar a configuração em uns 20 minutos e de novo dado esse insight de que a mesma letra 

 Nunca virava ela mesma e sabendo que uma palavra que aparece em toda mensagem na força bruta sem esses insights só testando cada configuração possível do enigma um computador desktop dos dias de hoje ainda levaria de horas há dias para conseguir decifrar de novo que tudo em sua equipe conseguiram fazer foi nos acreditar análise para diminuir drasticamente o espaço de tentativas e essa história toda foi para explicar 

 Duas coisas uma função de encriptação simétrica com segredo no caso a combinação dos rotores é construída de tal forma que a força bruta seria computacionalmente inviável no caso do enigma existem mais de milhões de milhões de milhões de possibilidades mas como ele tinha os defeitos que eu falei mesmo nos anos 40 sem um computador potente como temos hoje já foi possível derrotar o algoritmo em 

 20 minutos com motores e mecânicos a segunda coisa criar um algoritmo de encriptação robusto e resistente à capital análise é muito mais difícil do que parece se você não é um bom matemático teórico nunca jamais tente inventar seu próprio algoritmo sua melhor tentativa vai ser sempre pior do que o enigma use únicos e originais nos anos 70 o clipe foi implementado como uma avaliação de uma máquina de votorantim x parecido com um 

 Algoritmo do enigma algumas versões eram ainda mais fracas niter aumente implementar um sir q eu falei acima o hot 13 não era brincadeira ele chegou a ser usado de verdade essas implementações foram feitas numa época onde não havia a preocupação de hoje em criptografia feitos por gente como eu ou você sem treinamento em matemática era só pra deixar as coisas um pouco mais difíceis 

 Em breve o ciro foi substituído no comando críptico por algoritmos melhores como odeia encryption estender o 10o 10 foi desenvolvido pela ibm e escolhido pelo nist o national institute of standards and technology como o padrão de encriptação do governo americano nos anos 70 usando um segredo o chavez de 56 bits relembrando significa um espaço de dois elevados 56 ou 72 quadrilhões de possíveis chávez como vocês viram na 

 História do enigma de algoritmos triviais de substituição uma das fraquezas mais óbvias encontrar um padrão ou relação estatística entre a mensagem original em playback e os cyber text dentre as várias coisas que o deve implementar foram s boxes ou substituição boxes a partir daqui começa a entrar matemática mais complicada coisas como funções de bent transformação afim transformada de och por aí vai 

 Mas basta entender que s boxes são tabelas de substituição que causam que o cloud sheron chama de confusão tentando eliminar qualquer correlação o relacionamento entre o planteq da entrada e os iphone text da saída para evitar a situação do rio hitler do enigma onde conseguiríamos inferir alguma coisa do pai em teste a partir do site text criou-se a idéia de quebrar a mensagem original em blocos digamos de 128 bits passar por várias rodadas de 

 Transformação usando coisas como o xbox e usar o site repete neste bloco como entropia para o bloco seguinte de tal forma que mesmo que o texto tenha trechos que se repetem eles não vão ser creditados da mesma forma e assim no site artex de final não temos que encontrar padrões mesmo assim o mesmo porém teste aplicado no mesmo algoritmo sempre vai resultar no mesmo site o text e para evitar isso também costuma se usar o ine 

 Desejo um vector ou a iv no primeiro bloco dessa forma o pan em teste com a chave secreta avaliando esse aí vi o site tech vai ser bastante diferente além do princípio da confusão de xenon ainda existe o princípio da difusão ou seja se mudarmos um bit no pan em teste pelo menos metade dos bits do site do site text deveriam mudar de lugar diminuindo ainda mais a correlação do site o teste completo text enfim não 

 Precisa decorar o que acabei de falar a ideia é mais explicar como as coisas evoluíram desde o famoso enigma de qualquer forma o défice de 56 bits já foi quebrado uma das formas de fazer isso é via é pedir o field programmable gate array se pense num chip genérico onde podemos desenhar circuito e programar esse chip do tipo tipo de circuito que quisermos se vocês assistiram começo do meu vídeo sobre a supremacia quântica eu rapidamente 

 Explicou sobre portas lógicas e como podemos criar circuitos com essas portos sep diz é isso reprogramação das portas lógicas para criar um hardware especializado enfim hoje existem ep diz que consegue gerar da ordem de terra chávez por segundo ou seja quase 800 bilhões de chaves por segundo e como eu falei que 56 bits dá um total de 72 quadrilhões de chaves significa que dá pra quebrar 10 hoje em dia em pouco mais de 26 horas via força bruta fpj não 

 Foram criados só pra isso claro ele existiam antes mas criptografia sempre vai usar o que tem de melhor para estar um passo à frente o 10 foi muito importante porque ele recebeu o scouting enorme e como o governo americano estava usando havia muita motivação para entender como ele funciona e obviamente como tentar quebrar lembrando ele foi inventado nos anos 70 esse sistema com o ep diz que eu falei foi criado em 2012 e mesmo assim 

 Leva 26 horas pra quebrar não é instantâneo quando as primeiras teorias de como quebrar 10 começaram a aparecer também surgiram formas de deixar o próprio 10 mais forte e uma dessas formas é literalmente rodaram 10 mais de uma vez a mais especificamente passar cada bloco da mensagem pelo 10 três vezes e isso é o que conhecemos hoje como o dez é unicamente ele é computacionalmente enviava de quebrar 

 Mas pouca gente usa trepou desce hoje isso porque o 10 não é particularmente rápido e trepou 10 como você pode imaginar pode ser até três vezes mais lento então o início comissionou um novo algoritmo e depois de um longo processo e diversos bons novos candidatos eles escolheram um algoritmo running down cujo nome é derivado dos nomes dos autores de ong e vincent hayman diferente do desk os a chavez de 56 bits o ranking da ossa chaves de 128 192 256 

 Bits agora que vocês sabem que o sistema de erp dia e mais rápido 2012 demorava 26 horas para percorrer o espaço de 56 bits lembro que eu expliquei no episódio anterior que cada mais um bit que você adiciona duplica o espaço uma chave de 256 bits é 2 elevado a 256 que dá um número tão astronômico que estamos falando de um número com 77 casas o quadrilhão que eu falei antes acima tem só mais 15 casas 

 O algoritmo dessa chave pode levar a outras 10 chávez usa os pais xbox que eu falei passa cada bloco por 10 a 3 de rodar as transformações mais complexas que o 10 e com tudo isso ele ainda três vezes mais rápido que o 10 o algoritmo rain down foi batizado pelo nist como adversa encryption se estender ou e s mas as técnicas de capitalize evoluíram também hoje em dia sem saber que o algoritmo que chávez está sendo usado 

 Existem análises que checam quanto tempo está levando cada trecho do algoritmo consumo de energia em cada etapa a radiação eletromagnética e muito mais para conseguir mais dados para diminuir as possibilidades de tentativas já que força bruta pura num espaço de 256 bits é computacionalmente inviável e uma das formas de mitigar isso que se chama de ataques de sair de shannon é que hoje em dia o processador implementa o irs direto em hardware para evitar que 

 Implementações de software possam ser analisadas enquanto rodam já faz pelo menos umas dez gerações atrás que a intel implementa as instruções no processador desde uma antes da semdi bridge amd também implementa desde o jaguar e o rs 256 que você provavelmente usa se tem parte são encriptadas com tudo isso é extremamente rápido o suficiente para encriptar e de captar dados do seu hd em tempo real e é absurdamente segura eu 

 Conclui no episódio de supremacia a quântica que nenhum computador quântico seria capaz de quebrar o ei é se ele só diminuiria a força bruta em uma ordem de grandeza mas o espaço computacional é tão gigante que ele continue viável de quebrar mesmo assim eu queria dizer que a interpretação simétrica de sites de blocos são funções que recebe um punk text um segredo e michelle zeit um vector e cospe em um cyber text seguro mas isso não explica o que realmente 

 Significa ser seguro então resolvi fazer essa tangente acho que vale a pena ter uma noção do que significa algo sem captado com o irs mas como não demonstrei como funciona essa geração de chaves a partir da chave 256 bits como ele gera as tabelas os s box as maiores cotações e como esse aumenta a confusão e difusão segundo shannon se você tiver interesse existem centenas de documentações e vídeos aqui no youtube mesmo explicando o processo em 

 Detalhes agora existe uma outra categoria de algoritmos que é comumente confundido com encriptação e são as funções criptográficas de hash ou mestre de da e este literalmente funções que digerem mensagens diferente de encriptação simétrica como foi por 10 ou rs onde você pode reverter o processo e decapitar o safer text propõe text algoritmos de hash são o que chamamos de um é que a direção única ou seja 

 Irreversíveis toda a função de hash pega um pano e tec de qualquer tamanho e khost uma saída de tamanho fixo por exemplo o antigo md5 sempre vai construir uma saída de 128 bits representado com uma estranha de 32 caracteres em hexadecimal outro que você deve conhecer o chá ou sekhil rech algoritmo ano que cospe da semtabes representados em uma estranha de quarenta caracteres em hexadecimal os primórdios da internet com conexões 

 Instáveis e pouco confiáveis para garantir que o download de um arquivo não veio corrompido era usado antecessor o md5 o med4 para os restos original e do arquivo da rodada o md5 é basicamente o med4 com mais uma rodada já já vou explicar o que é uma rodada ambos md5 chão tem seus usos ainda mas são considerados inseguros hoje em dia um lugar deles deve ser usado chá 2 ou xadrez que foi aprovado pelo nicho em 2015 

 A partir do algoritmo chamado que cac vocês devem ter notado que o lixo tem uma cultura meio padrão e spa em captação é o em dau chapa 3 é o que cac isso pode confundir mas fora dos meios de criptografia poucos vem falar em lindau o que kahn que você ouve mais em irs ou chá mas enfim como funciona e para que servem algoritmos de haxixe eu disse que a função recebe uma entrada de qualquer tamanho seja uma estrela de senha em um arquivo pdf de contrato ou 

 Arquivo binário de instalador de algum programa e sempre vai curtir uma saída de tamanho fixo de 128 bits no caso de 25 ou 160 hábitos no caso do show pra fazer isso o md5 por exemplo você divide um arquivo binário e vai processando em blocos de 128 bits é um site de bloco só que em vez de preservar os blocos numa cadeia aquele usa o processamento do bloco anterior em cima do próximo bloco sobrando sempre um bloco do tamanho fixo em cima de cada bloco é aplicado alguma 

 Computação e aí que os algoritmos de férias para ganhar as características desejadas de segurança para simplificar imagine que o texto original e se bob um binário aqui do lado de três linhas só agora vamos quebrar esse blog em blocos de 10 bits em vez de 128 de novo só para simplificar de forma extremamente ingênua como só aplicar um ex cruzeiro o xbox pequeno vídeo anterior um bloco de cada vez um episódio a primeira linha com a segunda linha e 

 Agora esse resultado com a terceira linha mas temos um problema a terceira linha não tem 10 bits para poder executar o episódio da e precisamos completar ela e para isso fazemos o que se chama de pede se não estou enganado o md5 continuou que falta colocando o primeiro um bit 1 eo resto com zeros e pronto agora fazemos o último ex or e no final temos um único bloco de 10 bits isso seria uma função de haxixe 10 bits que é extremamente inseguro porque eu só 

 Usei um mísero ex o war claro que o md5 faz mais coisas por bloco mas só para vocês terem uma noção de como a partir de uma entrada de tamanho arbitrário chegamos uma saída de tamanho fixo novamente não implementem uma função de haxixe assim como eu acabei de mostrar o md5 usa tabelas pré computadas dividir cada bloco de 128 bits em quatro sub bloco de 32 bits performa várias operações além do episódio como em george mais e depois de vários rounds de 

 Operação concatenou subir blocos de volta no 128 bits e repete para o próximo bloco é um pouco mais complicado e mesmo assim o md5 shaun não são mais considerados seguros eles têm pelo menos dois problemas sofrem de ataque de colisão e ataque de extensão de comprimento para entender colisão precisamos entender algumas das características desejáveis em funções de hash primeiro gostaríamos que o hash que ele cospe se 

 Que é um número binário seja difícil de distinguir de uma função que cospe números aleatórios ou seja não seria bom que a saída se concentrasse próximo de certos números e sim que ela tivesse uma distribuição normal como a freqüência de números jogando dados nunca se concentrando só número vamos dar um exemplo de uso digamos que eu tivesse a tarefa de organizar centenas de livros em dezenas distantes de uma biblioteca como organizar a primeira coisa que vem 

 À cabeça seria tentar organizar em ordem alfabética por título autor porém rapidamente você vai notar que tem mais livros que começam com certas letras do que outras por exemplo que começam com a letra a e menos com z faz de conta mesmo se eu organizasse assim eu ainda ia ter que ficar caçando em qual estande comece em qual prateleira começa a qual letra em vez disso poderemos numerar cada posição em cada instante digamos que cada instante composta de 

 200 livros e temos 20 estantes então temos espaço para quatro mil livros temos mil livros para organizar e poderemos passar o título uma função de hash ele nos devolve um número entre 1 e 4 mil é quase 12 meses portanto seria uma função de haxixe de 12 bits agora o que seria o ideal que cada título devolvesse um número não repetido porque não seria legal se muitos livros caíssem na mesma posição certo se caíssem aos entraram em colisão 

 Não dá pra colocar dois livros no mesmo lugar físico neste nosso exemplo essa é uma das coisas que é desejável uma função de haxixe que existam poucas ou mais próximo de zero colisões mas justamente uma das fraquezas do md5 e do chá um é que descobriram que se você pegar o título do livro e cuidadosamente alterar o título colocando digamos alguns zeros do final do título uma hora chegaremos no mesmo rech de outro título criando uma colisão e porque se é ruim 

 No mundo real uma das utilidades de uma função de hash é ser uma impressão digital digamos que eu tenho um contrato de 100 páginas de word como eu sei que depois que transmite um arquivo pra você ver e meio ninguém interceptou e mail alterou o contrato e mandou uma cópia adulterada simples antes de enviar o contrato eu passo ela num md5 que vai me custar uma impressão digital de 32 caracteres daí eu passo aqui pra você e te digo qual é 

 O hash daí você pode passar o contrato pelo md5 do seu lado e comparar com o meu reste e se bater sabemos que é o mesmo arquivo porém se a função é fraca contra ataque de colisão alguém no meio do caminho poderia adulterar o contrato pra te mudar as palavras cuidadosamente para tornar o contrato ruim pra você só que isso em alterar o hash mas aí quem interceptor sabendo da fraqueza 2005 

 As pequenas alterações como adicional tirar uma vírgula um ponto alguns espaços e é possível chegar no mesmo resto do arquivo original aí você recebe um arquivo que foi cuidadosamente adulterado roda ele nenê 5 e tirar o mesmo rech do arquivo original e você agora vai confiar que esse contrato é o válido e vai assinar sem ler isso é um ataque de colisão eo tal ataque de extensão de comprimento aqui 

 Eu vou simplificar bastante mas eu deixei o procedimento completo nos links na descrição abaixo digamos que você tenha feito um site para fazer download de arquivos privados tipo mi dropbox você faz o upload de um arquivo e o site devolve url com uma chave especial nessa url muita gente faria assim pegaria o nome do arquivo concatenar ia com algum segredo que fica no servidor e devolveria o hash feito com o md5 o chão 

 Para baixar de novak você precisa mandar mesmo a url com o nome do arquivo e esse rech em particular esse uso de hash para a autenticação é o que se chama de mac ou mestre de authentication conde toda vez que você usa um hash para onde a autenticação damos esse nome de mac enfim digamos que você é um usuário malicioso querendo baixar outros arquivos do servidor diferente desse que deu upload digamos o arquivo barra etc barra pés wd 

 Só que não temos o segredo do servidor para concatenar com esse nome de arquivo e gerar um novo mac então como podemos fazer lembra como hash é calculado no exemplo simples com o ex o o stream é quebrado em blocos de 128 bits no caso de 5 60 bits no caso do chão um último bloco provavelmente não vai ter o tamanho total então então fazemos pede adicionando obtinham servido de zero até completar o tamanho do bloco 

 Daí fazemos várias operações em várias ruas em vários rounds em cima de cada bloco e usamos esse resultado em cima do bloco seguinte o hash de cada bloco no caso do chá um é a composição de quatro subgrupos de 32 bits que é concatenado para gerar o resto intermediário até o último bloco que ele tinha daí vamos bloco seguinte que tem o nosso valor adulterados e entender tudo que a função de hash precisava processar o bloco seguinte é o resto dos blocos 

 Anteriores ou seja sem saber o texto original passa lá pra função se soubermos o hash sabemos como processar novos blocos seguintes só adicionando o ped de zero antes do nosso valor malicioso para gerar o tal mec o resto com o chão o servidor concatenam certo segredo com o nome do arquivo faz o pad até o tamanho dos 30 é divisível dos 160 e da aplikando shaun bloco em cima do outro sem saber o segredo se eu souber só o tamanho no segredo eu posso fazer o 

 Ped de zeros manualmente a partir do nome do arquivo que eu fiz upload e iniciar um novo foco com o nome do arquivo que eu realmente quero e eu vou conseguir gerar um novo mac mesmo sem saber o segredo porque o hash que eu já tenho é tudo que a função precisa processar o próximo bloco é meio complicado de visualizar mas imagina que sabendo só rech que este mac do arquivo original eu posso configurar o estado da 

 Função do chão pra continuar a partir desse ponto como se ainda tivesse mais um bloco para terminar de computar que é o bloco malicioso que o kt no final o problema é que o resto é gerado pela md5 o chão me dá todas as informações que eu preciso para continuar a fazer rodar para novos blocos e gerar reches válidos se não entenderam revejam esse trecho ou acreditem que só de saber o hash eu posso adicionar novos blocos e gerar um novo rech válido como se a 

 Mensagem original tivesse esse bloco adicional desde o começo mas tem um porém justamente para evitar essas coisas você concatena um segredo no começo da mensagem original no caso o nome do arquivo mesmo que eu acredite que esse procedimento funcione como eu vou saber o tamanho do segredo que é importante para saber quantos zeros eu preciso colocar de pede e é simples digamos que a aplicação que eu tô tentando aqui é baseado em um projeto 

 Open source tipo o wordpress o magento da vida basta ir lá no nite rami e ver que tamanho de segredo está sendo usado no código fonte e testar de novo eu não preciso saber o segredo só o tamanho da estrela do segredo é por isso que existe em ti mec que talvez você já tenha esbarrado em algum tutorial para ajudar a evitar ataques de colisão e ataca de extensão de comprimento como expliquei acima em vez de só aplicar o hash em 

 Cima do segredo mais a mensagem depois de fazer esse rech você aplica a função de hash de novo concatenando o segredo com esse racha ou seja podemos a função de haxixe duas vezes uma em cima da outra concatenando segredo nas duas vezes isso é um et mec ou rech base de mestre de authentication conde você usa isso como o que garante que o conteúdo original da mensagem não foi adulterado algoritmos mais novos com o 

 Xadrez não precisa fazer esse procedimento eles sozinho já é tipo um leite mec estão vendo como as coisas não são tão simples quanto vocês pensam todo mundo pensa que a basta concatenar um solte o segredo no stream antes de aplicar o hash e já vai ser magicamente seguro por isso eu repito que vocês não devem subestimar segurança e fica tentando fazer soluções de criptografia na mão o que determina a força de um algoritmo não é só o tamanho 

 Da chave é como você usa um algoritmo e falando em subestimá ataca de extensão de comprimento comprometem reches usados como mac ou seja com métodos de verificação e autenticação como um exemplo de download de arquivos mas e rachas usados prove obfuscated in a como no caso da tabela de senhas roubado um procedimento padrão é receber a senha de usuário no cadastro e nunca guardassem aberta e nem crepitar recapitulando 

 Porque se assim de encriptação for roubado você consegue abrir cem por cento de todas as senhas da base você tem um ponto único de falha muito perigoso por isso a próxima idéia é que muita gente teve foi fazer rech das senhas antes de gravar só esse rech no banco daí quando o usuário fazer login você faz o resto da seca ele digitou e compara com o resto do banco e se bater sabemos com certeza que é a senha certa 

 Parece promissor não parece mas só aguardar se o resto da senha ainda é muito fraco a maioria dos usuários usa como sem palavras fáceis de lembrar incluindo coisas toscas como 12345678 oeste 1 2 3 ou dados que estão abertos no seu cadastro como data de aniversário ou algo parecido vi a força bruta testando todo strong possível você levaria anos para encontrar uma única sem mais hackers não 

 Fazem força bruta e se você pré calcular se o hash de todas as palavras mais usadas de um dicionário agora você sai comparando o resto da tabela de senhas roubadas com a tabela de resto do dicionário uma base de dados grande com uma rede social com milhões de pessoas você com certeza e achar centenas ou milhares de senhas só dessa forma ataques de dicionário o ataque com reembolso tables usam chapéus pré computados de régis 

 Lembrando que é a habilidade de colisões um algoritmo de haxixe e tecnicamente pequena mas não é zero duas senhas diferentes podem acabar colidindo no mesmo rech lembrou do exemplo dos livros estantes mesmo usando algoritmos que não têm as fraquezas de colisão do md5 chão como chá 2 ainda assim sempre existe o risco do paradoxo do aniversário já ouviram falar vale a pena contar isso se você nunca 

 Ouviu antes porque novamente o que chamamos de senso comum normalmente falha perto da estatística imagine uma sala de aula qual é a chance de duas pessoas fazem aniversário no mesmo dia você podia pensar que seria perto de zero afinal uma sala de aula tem só 30 alunos e tem o que 365 dias no ano porém mais freqüentes do que você pensa para calcular as simples eu vou deixar o link nas descrições abaixo mas pensa 

 Assim em vez de tentar calcular chance de duas pessoas terem o mesmo adversário é mais fácil calcular o primeiro a probabilidade ninguém da sala tem o mesmo aniversário então a primeira pessoa pode fazer aniversário em qualquer dia do ano seria 365 dividir presas e três de cinco é um a segunda pessoa só pode cair em 364 dos dias restantes / 365 a terceira pessoa só pode cair em 363 / 13 65 e assim por diante 

 Multiplicamos todas as possibilidades por 30 alunos agora fazemos um - a probabilidade para ter a probabilidade de duas pessoas terem o mesmo adversário sabe qual é o resultado de uma sala de aula de 30 pessoas a probabilidade é de 1 70 por cento támbém hoje de 0 colisões são estatisticamente mais freqüentes do que gostaríamos é um fato da matemática e esse é um dos perigos com algoritmos de hash o fato que colisões são probabilisticamente possíveis 

 Eu levanto esse fato porque muito programador usa rech de algoritmos puxado e 56 achando que eles sempre vão ser únicos e por isso poderiam ser usados até como identificadores únicos mas isso está errado por acaso a distribuição estatística de um mestre de daibes se comporta parecido com o gerador de números pseudo aleatórios mas eventualmente haverá colisões com acabei de explicar por isso que existe outra coisa que se 

 Você precisa de um - únicos que são o universo eo nic a identificá las o wii wii de ou a implementação da microsoft que são os globo e unicamente fire hoje wide por acaso eles são também número de 128 bits que o mesmo comprimento da saída do md5 representados com hexadecimais de 32 caracteres por isso a cara de white é meio parecido com a saída de md5 eo ipad também tem chance de ter colisões mas 

 Eles são desenhados para essa probabilidade se realmente quase zero quando acontecem já aconteceu algumas vezes é considerado um bug na implementação aliás falando em extremis parecidos também não confundir com o novo padrão ipv6 que também o endereço de 128 bits e adivinhe representados com 32 caracteres hexadecimais portanto para quem nunca viu nada disso o endereço ipv6 o identificador e heai de hoje wide e um hash md5 tem mais ou menos a mesma 

 Cara sendo todos os números de 128 bits representados com 32 caracteres hexadecimais mas eles são gerados de forma diferente e tem usos completamente diferentes e com isso eu vou terminar por hoje no cliffhanger exatamente nesse ponto estamos na metade do assunto eo resto já escrevi mas agora é uma boa hora para rever o que eu expliquei peguem suas anotações façam mais pesquisa nos pontos que mais se interessaram e estudem bastante porque o 

 Próximo episódio vai ser tão denso quanto esse eu não vou nem perguntar se vocês ficaram com dúvidas porque até ainda têm muitas dúvidas em muitas coisas mas não deixa de comentar baixo se curtir o vídeo mantém o joinha compartilhe com seus amigos e não deixem de assinar o canal e clicar no sininho para não perder a parte 2 a gente se vê semana que vem até mais

Olá pessoal fábio akita pois bem vamos pra parte 2 do tema de conceitos básicos de criptografia semana passada o volume tem um tanto de informação espero que vocês tenham conseguido acompanhar essa semana não vai ser diferente portanto pegue papel e caneta de novo e prepare se para fazer muitas anotações da mesma forma como na semana passada a matemática é muito pesada e eu não sou a pessoa mais 

 Indicada para vencer nos detalhes das provas matemáticos eu já vou me considerar com sorte se não confundir os conceitos durante as explicações se tiverem interesse na internet existem centenas de documentações explicando toda a matemática em detalhes vale a pena dar uma olhada porque se eu fosse tentar explicar em vídeo teria que fazer um outro canal inteiro no tamanho do nome rafael 

 Recapitulando semana passada falamos sobre captação de chave simétrica falamos sobre algoritmos de hash nesta cidade sobre o enigma agora vamos continuar o assunto começando a mostrar as ramificações por cima disso [Música] continuando a nossa história hipotética da tabela de senhas roubadas já estabelecemos que não devemos gravar senhas dos usuários em planteq numa tabela em nosso banco também já 

 Estabelecemos que não devem ser captadas e agora tentamos gravar o hash mas como já vimos é fácil atacar com dicionários ou reembolso tables com régis pré calculadas e como ainda existe o paradoxo do aniversário que garante que existe uma boa probabilidade com de colisões é possível encontrar uma palavra que gere o mesmo resto da senha do usuário mesmo que não seja exatamente a mesma senha para evitar esses ataques uma 

 Forma de mitigar é como katena algum número grande junto com a senha e daí geral rech então para cada novo usuário cadastrado geramos esse número que chamamos de solte daí fazemos o resto da senha prefixado com esse solte e gravamos o hash resultante no banco junto com o solte daí vai ser mais difícil um ataque com remou temos pré calculadas se você já forçou o código-fonte de 

 Qualquer sistema de autenticação vai encontrar esse campo solte o equivalente então resta ao hacker tenta calcular os restos na hora usando o sol desvia força bruta concatenando palavras de um dicionário com sorte que está na tabela até achar um racha que tem a colisão com o resto é gravado na tabela parece difícil porém a geração de régis pode ser acelerado aqui é mais uma especulação nem sei se 

 Fazem isso mas faz de conta se você acompanhou a corrida pelo bitcoin nos últimos anos deve ter ouvido falar que os tais mineradores acabaram com estoque de gpu do mercado em 2017 e que mineradores gigantes com a vítima em criar um henriques ou application specific integration circuits lembro que eu falei do sep diz é pedir são circuitos programáveis via software que você pudesse mudar o hardware do chip como se fosse um chip feito sob medida 

 Exige que são exatamente chips feitos sob medida direto da fábrica existem esses feitos exclusivamente para gerar reajustes específicos de mineração os famosos em ti mayer s 9 é uma combinação e ele quer pedir e processadores arm como controladores para dar uma ideia um cpu topo de linha como intel core 99 990 cá tem o que chamamos de hash power que a potência de geração de haxixe são os 478 has por segundo parece bastante na porcaria uma 

 Gpu pode ser usada para gerar rachas mais rápido ainda o nvidia taita next arquitetura pascal que a geração passada consegue fazer 1.3 giga-hertz por segundo ou seja 1.3 milhões de réis por segundo ordens de grandeza mais rápido que uma cpu e eu posso ligar mais de uma cpu e gpu no mesmo computador em paralelo mas isso também é uma porcaria uma única unidade doente maine s9 consegue fazer uns 14 era régis por segundo ou seja 14 bilhões 

 De reais por segundo agora estamos começando a conversar sem entrar muito nos detalhes de como o bitcoin funciona o que chamamos de por favor que que é o processo de assinatura de um bloco de bitcoin é basicamente achar o resto especial desse bloco não é um hash qualquer você precisa e alterando um número dentro desse bloco que altera o resto final até achar um hash que começa com um certo número de zeros à esquerda mas você lembra que eu 

 Falei que prende algoritmos de hash precisam embutir os princípios de confusão e difusão de xenon ou seja se eu mudar o beach na mensagem original mais da metade dos bits do resto precisa mudar de forma que não seja fácil achar o relacionamento entre a mensagem original e o hash final se eu ficar alterando só um número dentro do box transações bitcoin e refazer o hash ele vai ser completamente 

 Diferente do resto anterior de forma que o comportamento é parecido com a geração de um número pseudo aleatório então eu preciso ficar alterando esse um número do bloco e gerando reches até conseguir achar um hash específico que tem a tal seqüência de zeros à esquerda essa quantidade de zeros é o que chamamos de dificuldade da mineração e você imagina que o minerador precisa de muito rech power porque mineira é uma competição centenas de mineradores estão tentando 

 Assinar o mesmo logo ao mesmo tempo quem achar o hash primeiro ganha um prêmio emitir coins uns 12 bilhões agora em novembro de 2019 além do prêmio minerador ganha as taxas de transação acumuladas nesse bloco e quem perder não ganha nada com isso quanto mais haxixe power o minerador tiver mais chances tem de achar o hash primeiro e por isso que se usa um é esse que como ente mayer e por isso que só com a gp11 cpus você não tem chance de 

 Competir porque estamos falando de pular de milhões de reais por segundo com gpu para bilhões de reais por segundo com ente myers mas não só de mineração de bitcoins vivem geradores de régis imagine você colocar uma versão derivada de um ente mayer feita exclusivamente para gerar rachas normais para tentar achar a colisão via força bruta numa tabela de senhas roubada mesmo com o sol ti o equivalente mayer pode ficar 

 Perguntando um dicionário concatenando cada palavra com solte gerando rech na hora pra comparar é um processo parecido como mineração de bitcoins mas pode ser usado para tentar quebrar senhas ea força bruta é uma velocidade de bilhões de restos por segundo concorrente mayer e como cada ente mayner custa só três mil dólares imagine se eu colocar um data center de derivados gente mayer com um único objetivo de explorar senhas 

 Especialmente se forem seus importantes como senhas de banco ou senhas de funcionários do governo americano voltando à nossa história tabela de usuários roubada por isso mesmo só fazer o resto de senhas mesmo com o recurso de concatenar com o sol diz antes de rachar ainda oferece risco iminente de encontrarmos colisões usando oasis especializados e agora o problema é outro quanto mais rápido for performance de um 

 Algoritmo de hash mais rápido e seis e quinze hipotético conseguiria processar então existe uma outra forma de proteger e usando algoritmos de derivação de chávez com capacidade de adicionar dificuldade no processo um dos mais conhecidos hoje é o pé suor desde que deu e vejam function o pb kdf 2 como o nome diz é uma função que deriva chaves a partir de senhas vamos entender uma seria normal é normalmente muito fraca 

 Não importa se você acha que fez ela ser forte trocando a por arroba ou ipor exclamação essas coisas qualquer atacante já adicionando algoritmo de força bruta para quebrar sua senha marta sempre do princípio que só seriam aposta por isso o sistema de autenticação baseada sem quebras por exemplo não usam sua senha diretamente primeiro elas modificam a sua senha em um processo conhecido como que extrai fenin ou que stretching literalmente 

 Fortalecimento esticamento de chave elas não são necessariamente a mesma coisa mas para esse vídeo vão assumir que são é basicamente o processo de adicionar um solte gigante algo com mais de 64 bits de comprimento e aplicar alguma função em timac de rachas milhares ou centenas de milhares de vezes um em cima do outro e adicionar alguma entropia extra como o horário atual algumas vezes no meio do processo isso 

 Tem duas funções a primeira é em geral uma nova senha mais forte e mais longa que você pode usar no lugar da sua senha curta e fraca é uma senha derivada da sua mas que vai resistir reboteiros e dificultar a colisões mais do que isso algoritmos como pb kf2 tem um fator de dificuldade parecida em conceito com o processo de por favor que é usado na mineração de bitcoins é literalmente quantas vezes você vai rodar o algoritmo de resto como chá 2 ou 

 Haiti max a 1 e se você rodar dezenas de milhares de vezes o algoritmo vai custar meio segundo talvez até um segundo para gerar o hash final com o que eu falei até agora você já deve está entendendo porque desejável um algoritmo custa caro para gerar o hash eu mencionei a possibilidade de usar um similar ao intimar um executivo para quebrar senhas rachadas consoles eu fico falando similar porque na prática você não vai usar o imt mayer de 

 Verdade porque a lógica do circuito está feita especificamente para a lógica de provoca de mineração de bitcoin porém com efe pg ou desenhando um novo êxito específico para achar 256 por exemplo ou no mínimo usando gp uns você já está na casa milhões de réis por segundo com o novo é esse que você poderia pagar bilhões de restos por segundo sabendo que o curso de desenvolvimento de hardware de cai todo ano em breve 

 Ficará acessível criar equipamentos assim muito barato na china por isso começamos a migrar para o algoritmo geração de régis como o bbk de f2 que custa caro para processar mas essa não é a única solução é uma corrida entre aumentar a dificuldade do algoritmo versus conseguirem criar ver mais rápido com mais este power imagine o seguinte problema digamos que no cadastro de usuários do seu sistema você resolveu se precaver e escolheu usar tbk 

 De f2 com at max shaun com o solte de 64 bits e com dificuldade de umas mil rodadas e isso leva alguns milissegundos para gerar o hash e é isso que você vai gravar no banco com hardware atual isso levaria milhares de anos para achar uma colisão dá uns 25 anos digamos que consigam fazer esse tal esic barato que comece a achar colisões e se agora eu quiser aumentar a dificuldade de migrar todos os restos para usar chá 2 com saltos de 

 128 bits aumentar para 100 mil rodadas eu não tenho como fazer isso porque obviamente eu também não tenho a senha original do usuário para refazer o hash por isso outra forma de mitigar que algumas aplicações que incrementam é atualizar o resto do banco quando o usuário se logar com o sucesso da próxima vez porque é só esse momento que você tem assim do usuário de novo daí você pode gerar um novo rech com maior dificuldade e atualizar no banco 

 O hash de 1tb kdf 2 é o hash concatenado do solte do número de interações dificuldade e por isso é bem cumprido e por isso você não precisa criar outro campo na tabela só para guardar o valor do solte além de aumentar a dificuldade exigindo mais processamento existem outras formas de mitigar por exemplo o custo de memória ram costuma ser proporcionalmente maior do que seus ao longo do tempo elas diminuem menos 

 Rápido de preço e se criarmos um algoritmo de hash que além de ser caro para processar também exige o uso de memória bem elevado e é isso que faz algoritmos como bekri pitt s tim e outros novos como argus 2 finalmente chegamos no b craft que muitos tutoriais hoje recomenda usar seja em php ou ruby você acha bibliotecas e tutoriais que usam o bê clipe pra fazer o resto da senha assim como o bbk de f2 ele tem 

 Dificuldade configurável então a produção deixa uma dificuldade elevada mas para sua máquina desenvolvimento ou para ambientes de testes com ferramentas de contínuos integration você deixa uma dificuldade baixa para rodar mais rápido o bê clipe na realidade não é um algoritmo específico de hash ele pode ser usado como uma função de derivação de chaves através de um algoritmo de encriptação simétrica no caso o site é bom fechar o bom fish foi criado como 

 Uma alternativa mais segura e mais rápida que o 10 lembro que falei dele no episódio passado na verdade acho que qualquer coisa hoje em dia é mais seguro e mais rápido que o 10 mas o golfe tem uma característica importante que nos interessa ele tem um curso de setup alto ele precisa de quatro que o bai de memória para cada novo setup parece pouco mas isso escalar rápido e torna o gol fish caro em termos 

 De uso de memória e vocês lembram que uma das formas de deixar 10 mais seguro era rodar o algoritmo três vezes por bloco pois bem existe uma derivação do golfe chamado tio fish que foi um dos finalistas da competição da anistia para escolher quem seria o novo é esse mas como falei no episódio anterior quem ganhou foi o running down de qualquer maneira podemos usar o bom fish irá gerar reches isso é uma coisa que nem todo mundo sabe reches podem ser 

 Gerados a partir de algoritmos de captação de chaves simétrica o bê clipe tinha um exemplo disso usando o ofício para gerar reches diferente do pb kdf 2 você não precisa gerar e passar um solte porque o bê críptico eram solte automaticamente por isso se você rodar o bê clipe de várias vezes em cima de uma mesma mensagem ele vai gerar rachas diferente toda vez e assim como o bbk de f2 você pode configurar a dificuldade que é o custo dele inclusive o parâmetro 

 Se chama cost assim quanto maior o custo mais rodados ele vai fazer mais demorado vai ficar mais diferente do pb kf2 só com esse você não vai conseguir será um ataque de força bruta porque além de hash power vai precisar de muita ram elevando o custo e dificultando alguém tentar algo assim existem outros sucessores ao bê criticou o s craft árgon dois que foram desenhados especificamente para serem 

 Mais caros ainda em uso de memória e dificultar ataques só de hash power via gpu zhou esx muitos frei web hoje usam de creep porque ele é melhor que nada mas eu imagino que se alguém precisasse escolher o algoritmo de hash mais resistente e moderno hoje seria o argon 2 que é o mais flexível em termos de customização ou no mínimo o s críptico concluindo a parte de como proteger senhas sabemos que jamais nunca devemos gravar em teste também sabemos que não 

 Adianta encriptar 100 e gravar no banco aprendemos também que só usa um hash seja um chamado e 56 ou eight mec 256 por si só não vai resistir muito tempo a táxis adicionais ou reboteiros adicionar sol da ajuda bastante mas não vai ser resistente a ataques via hardware especializado como gp usa oasis portanto a melhor medida hoje é usa um algoritmo de derivação de chaves que seja muito caro tanto em processamento quanto em uso de memória como árgon 2 ou esse 

 Clipe e de tempos em tempos toda vez que o usuário se logar com sucesso gerar um novo racha com uma dificuldade ainda maior de gravar no banco dessa forma mitigando o máximo possível caso o banco de dados seja comprometido e os dados caiu na mão de hackers dispostos a quebrar suas senhas mas meu site usa autenticação de dois fatores só com a senha ele não vai conseguir entrar o grande lance de quebrar senhas não é 

 Para usar só no seu próprio site um dos problemas com os usuários normais é que eles usam a mesma senha em sites diferentes se no banco de dados de 1 milhão de pessoas e eu consegui 100 mil senhas são 100 mil possibilidades para se usar em diversos outros sites o que os usuários possam ter contas por isso mesmo falamos que além de habilitar autenticação de dois fatores cada contêm cada site que você tenha cadastro deve 

 Usar uma senha segura diferente e por isso você devia tá usando ferramentas de gerenciamento de senhas como o pes ford ou leste pés ou equivalentes eu faço isso nenhuma conta minha têm senhas repetidas twitter facebook derrame instagram google cada uma usa senhas de uns quarenta caracteres aleatórios gerados por ferramenta impossíveis de decorar uma pequena tangente eu já falei com muita gente confunde reches de mestre de das 

 Disfunções de derivação de chaves ou mesmo eo wide gil haidê ipvc 6 porque todos eles são estrelas com caracteres representando hexadecimais que parecem aleatórios existe ainda outro gerador que cospe strings que parecem bagunçadas que podem confundir esse é obesa e 64 664 uma ferramenta usada para converter um binário em stream de texto cada caractere do besi 64 representa 6 bits então três bairros de 8 bits 

 Representados em quatro caracteres de 6 bits portanto sempre se lembra que converteu um binário em texto via bc 64 aumenta o tamanho final em pelo menos 20 por cento se não forem comprimidos com gesipe ou algo assim e porque é preciso converter binários em texto simples porque todo o protocolo de internet como os de email e mesmo http são protocolos texto se eu quiser enviar um e mail com o anexo que um arquivo pdf word ou a imagem ele 

 Precisa converter em texto para poder com katena no corpo do e-mail sim se você não sabia disso todo e meio é sempre 100% texto e todo o binário precisa ser convertido em base 64 para ser anexado e por isso todo o anexo de e-mail é mais pesado que o binário original e por isso você deve evitar mandar nexus gigantes eu acho que não precisa dizer isso essa altura mas eu fico pasmo toda vez que eu vejo um programador que 

 Acha que base 64 é uma forma de encriptação ela não é ela é só uma conversão simples de binário para textos em chaves em entropia sem nenhuma operação que bagunça seu conteúdo nunca use bens em 64 achando que está adicionando alguma dificuldade de obter os qassam pois não tá beise 64 é trivialmente reversível do texto binário outro nome que talvez você veja por aí é as que arma ou radix 6 4 

 Mas é tudo bem e 64 a mesma coisa vale para cheques anos ou crc que sai que o verdão cheque em resumo é um cálculo feito em cima de um número para ver se algum dos disto está encerrado por exemplo um código de base um boleto bancário tem uns rc dessa forma é muito fácil checar se a pessoa digita o número errado do boleto naquele código usam que você digita no seu internet banking em 17 c no final 

 Que é um número calculado a partir dos anteriores digite um número errado e os seis e não vai bater serres e também a última checagem de erros no tráfego de pacotes de rede o protocolo tcp em uma checagem de seis e meio fraco e por isso existe outra checagem na camada 2 no nível do frame de internet por exemplo é uma forma de rapidamente checar erros de transmissão causados por barulho ou interferência na rede por exemplo mas isso também não tem nada a ver com 

 Rachão infectação até agora tudo o que falamos de encriptação depende de um componente um segredo ou uma chave há coisas como encriptação hd é suficiente quando você usa o bitlocker do windows 10 pro o file volte do mec oeste ou looks no linux eles vão fazer um processo similar você começa providenciando uma senha que devia ser forte mas como ao mesmo tempo você não quer esquecer a senha e perder 

 Acesso aos seus dados provavelmente vai acabar usando uma senha porcaria mas não tem problema o sistema de encriptação vai gerar uma senha forte pra você usando um solte gigante com um algoritmo de derivação de chave como esse clipe o pb kdf 2 que como já expliquei são resistentes ataques de força bruta ou dicionários e até zics aqui eu estou chutando mas essa ainda não deve ser o segredo para a equitação ele vai gerar 

 Outra senha forte seria o malte que esse malte que é o que vai ser usado para interpretar os dados do seu disco ea senha forte derivada da sua vai ser usada para encriptar o molde que dessa forma se amanhã você quiser mudar sua senha o ps frase você vai só mudará a derivação que abre seu molde que não precisaria decretar a encriptação disco inteiro tudo de novo adicione ainda um toque ou identificar biométrica como autenticação de dois 

 Fatores e você tem um pouco mais de segurança entenda que além dos seus dados têm outra coisa importante que precisa ficar encriptado o seu suape o swap é como se fosse uma extensão da ram e em disco não dá pra saber o que tem nesse suape se alguém pegar esses eu sou a pior pode ter o que tinha na memória nas aplicações que estavam rodando na máquina números de cartão de crédito 

 Mesmo senhas e outros dados sensíveis podem estar lá você gostaria que a memória também seja creditada a intel por exemplo tem um sd ex ou safe garde ex tons em resumo ele garante que dados específicos que saem do processador para a memória já saem direto do processador encriptados colocados numa região específica da memória que chamamos de álcool eles ou seguirão com leis pense numa partição criptografada dentro da ram que só l da escrita pela cpu e 

 Nem seu sistema operacional têm acesso nem como ruth nem como administrador nem nada não é 100% do que está na ram mas uma coisa específica que você manda vilma p é uma pec que pode ser usada por softwares que precisa trabalhar com dados sensíveis como uma chave mestra de forma que ela não fique nem por um milissegundo exposta em ran e planteq e suscetível a ser roubada dali por um malware resumindo até agora falamos de 

 Algoritmos de hash tanto obsoletos com o md5 e shaun quanto mais novos como este mexe sha256 falamos de derivação de chávez com o bê clipe pb kdf dois de encriptação simétrica de chave coisas como o iss lindahl ou blowfish ou tripo 10 que são todos algoritmos box haier por processar em um bloco de cada vez mas existem outros algoritmos como rc4 que são strings iphones que aplica processamento bit a bit em vez de bloco a bloco mas para os propósitos de hoje 

 Só box ayers é suficiente então falta falar de encriptação assimétrica e troca de chaves tudo o que falamos até agora de encriptação depende de uma chave secreta é a chave para encriptar e decrépita dentro da mesma máquina tudo funciona mas quando queremos mandar um cyber text pra outra pessoa pra essa outra pessoa de captar a mensagem ela precisa ter o mesmo segredo usado para encriptar só que não existe nada mais inseguro do que 

 Trafegava uma senha pela internet essa senha vai certamente ser interceptado no meio do caminho e toda sua segurança vai por água abaixo queremos um jeito de criar uma chave na minha máquina e na máquina de outra pessoa sem trafegar as chaves de tal forma que o que inclui pitaco a chave só eu tenha seja possível de ser decapitada com a chave que só outra pessoa tenha esse é o conceito para simplificar não falar das duas mais importantes disse 

 Helman ea é sei ambas cujos nomes são os nomes dos criadores no caso o ifw de difícil e martin e alma e no caso de aparecer é o vaivém shamir e é dohmann vocês devem ter percebido que muitos algoritmos de segurança ganha uma derivação do nome dos criadores mesma coisa com lindau que é o irs por exemplo e tanto disse helman ea é sei por coincidência feminidade já que nasceram em 77 o ano onde descobrimos que é 

 Possível trafegar comunicação infectadas em o risco de trafegar uma chave secreta e eu argumentaria que a partir desse ponto que a internet realmente se torna comercialmente viável e anos depois permitir a coisas como e covers já avisando que felizmente é fácil explicar como esses algoritmos funciona mas vai ser impossível demonstrar porque eles realmente funcionam falta matemática para explicar a aritmética modular teorema de other todos cientes e muito 

 Mais então de novo por hoje vocês vão ter que acreditar no que ele diz é mas eu recomendo que vocês pesquisem as provas matemáticas foi isso que diferencia o dfi helman porque eles conseguiram demonstrar matematicamente a segurança do algoritmo e pra que serve disse helman ele possibilita que duas pessoas consigam gerar duas chaves separadamente cada 1 gerando sua própria senha em sua própria máquina sem nunca trafegar essas senhas e eles garantem 

 Que o que a senha de um clipe tar a chave do outro consegue detectar consegue entender implicações todo mundo explica de fiel mama usando cores ou números pequenos para facilitar a explicação então roubar a explicação da wikipédia porque é bem simples imagine duas pessoas na internet alice e bob primeiro eles trocam duas informações públicas de modo inseguro via internet mesmo um número é o modo pelo igov 23 por exemplo em uma base g 

 Igual a 5 e 5 porque é uma raiz primitiva modo 23 falei que precisa de aritmética modular da yale se escolhe um segredo chamado azinho ela não divulgará nenhum número 4 agora vai complicar um pouco a lista precisa calcular o g que é um número público elevado e se à zinho que é secreto módulo b ou seja 5 elevada quatro módulos 23 que por acaso é 4 de novo porque estão usando números muito pequenos esse resultado quatro que vão chamar de 

 Asam ela pode mandar publicamente pro blog via internet insegura agora o bob também escolhe um segredo que ele não divulga o desenho igual a 3 e faz a mesma conta de jeleva da besni módulo p ou seja 5 elevada três modos 23 que 10 vamos chamar isso de bebezão e bob pode mandar esse visão para alice via internet também aberto alice agora pode computar o bebezão do bob e levado à zinho privado dela módulo p ou seja 10 elevado a quatro módulos 23 

 Que 18 e o blog pode fazer a mesma coisa pegar o azarão que recebeu dali se elevar com o segredo bebezinho dele que é 3 e fazer modo 23 resultado de 18 também pronto tanto alice quanto bob compartilha o mesmo segredo 18 e esse número nunca trafegou pela internet e mesmo sabendo módulos 23 a base 5 às 14 dalício versão 10 do bob é impossível chegar no segredo 18 que só os dois conseguem ver uma pessoa que ouviu a comunicação no meio do caminho não tem 

 Como calcular o segredo 18 essa é a propriedade de grupo multiplicativo de inteiros módulo p agora podemos fazer uma derivação de chave desse segredo ou no caso de um tsl eles fazem acho que só rech simples viajar 2 porque eu acho que tls antecede a criação do conceito de inovação chávez mas esse rech pode ser usado como o segredo por ambos no algoritmo de captação de chaves simétrica como iis e trafegar mensagens encriptadas inviáveis 

 De decapitar como eu já expliquei antes sobre o irs e lembrando que a idéia de fazer uma animação de chávez via reches seria para esticar e fortalecer a chave claro esse exemplo usa inteiros bezzera velmente pequenos na realidade o tal módulo pac1 número primo gigantesco de gamas de 4096 bits a dificuldade para alguém de fora é descobrir qual o número que podemos levar o azzam o bezerrão módulo pq vai nos dar o segredo e para achar esse 

 Número caiu no problema de logaritmo discreto que é computacionalmente em viável de resolver e esse é o problema que só o algoritmo de chorar quântico conseguiria tentar resolver num computador quântico de mais de 4 mil quil mix como eu já expliquei no episódio de supremacia quântica de ferrel mann é bom pra criar chaves temporárias mas tem um problema ele sozinho não tem como a utente casa identidades da alice do bob por exemplo 

 Uma terceira pessoa chamada live podia fazer um ataque menem demitido ou seja toda a comunicação da alice passa pela iv ea devolve para o bob e vice versa daí a alice ea iv acabam combinando o segredo via difícil é uma e depois aí vem o bob combina outro segredo e pronto ela participando desse processo vai produzir segredos conhecidos com os dois e consegue ao mesmo tempo ver a comunicação e repassar a comunicação entre os dois de tal forma que alice e 

 Bob não percebeu que a comunicação está sendo interceptado e repassada para evitar esse ataque de man in the middle existe outro protocolo usado por cima do dfi hellman que oeste é so protocolo station' que estejam quem resumo exige uma checagem de assinaturas entre os participantes para validar as identidades antes de entrar no processo de geração de chaves secretas e isso envolve o uso de certificações de chave pública onde tanto bob quanto alice tem 

 Um par de chaves privadas em chaves públicas isso chamamos de james assimétricas para entender chaves assimétricas vamos de uma vez entrar no ar é sei aqui a matemática fica mais difícil se você já gerou chaves públicas para cadastrar no derrame provavelmente teve que usar o comando ssh aqui gênio e normalmente o padrão é usar a opção rsa em resumo hiper resumido o processo comece escolhendo dois números primos 

 Gigantescos de novo lá pela casa de 2048 bits na verdade os tutoriais todos devem ter recomendando você escolher 4096 bits o primeiro processo envolve a multiplicação desses dois primos esse é o modo da operação daí você escolhe um outro número com o primo da função toda gente de cármico para esse modo esse vai ser o expoente da operação a chave pública é a combinação do modo e do expoente agora você acha o inverso multiplicativo modular do expoente 

 Inverso módulo extintor gente essa é a chave privada nem se preocupa em saber o que a função do tite é o inverso multiplicativo modular se quiser entender toda a matemática vai precisar saber o que o algoritmo de extensão o cristiano teorema de lagrange e de novo o tal grupo multiplicativo de inteiros modo hopper que usamos índice helman mas entenda só que a operação inicia com dois números primos gigantes com ele você 

 Calcula a chave pública primeiro e dela deriva a chave privada e por isso elas são relacionadas à propriedade mais importante é que tudo que você encriptar com a chave pública só pode ser detectada com a chave privada e vice versa a chave privada você guarda num diretório na sua máquina o máximo de permissões fechadas tipo que você tem no diretório pouco ssh em todo o linux ea chave pública é que você pode divulgar para qualquer um e é o que você cadastra 

 Na sua conta no twitter web por exemplo mas como alice e bob conseguem autenticada identidade deles ou seja como que o bob faz pra saber que ali se é confiável aqui entra o papel de um centro authority ou se e como uma certisign todo sistema operacional vem pré instalado com as chaves públicas de autoria desconfiáveis como a certisign 7 gold 7 globalsign e outros quando você clica no 

 Cadeado no seu navegador e vai no caminho da certificação você vai ver no topo um desses e as você confia neles porque vieram de alguém confiável windows da microsoft a microsoft confia na associação e seu navegador vai confiar nelas também confiança é uma cadeia para duas pontas desconhecidas confiar em uma nas outras elas precisam primeiro confiar no terceiro que ambos confiam esse é o princípio então a alice começa 

 Mandando antecipadamente a chave pública dela pra manga globalsign por exemplo a globalsign vai usar a chave privada dela pra assinar a chave pública da alice a chave e assinatura são armazenados num pacote especial que contém plate que é o formato x 509 de novo quando você clica no cadeado de algum site com o pls ele abre várias informações e é isso que vem dentro de um certificado x 509 mais importante e certificado e certificado está a chave da alice assinada pela 

 Google sai mas como é que faz assim a assinatura de novo aqui vou simplificar bastante pra assinar alguma coisa com uma das chaves considere que as chaves são números digamos que a chave privada seja o número 10 ea chave pública seja número 4 você pega caracter a caracteres da mensagem que quer assinar e multiplica a ela por ela mesmo dez vezes seu carácter em binário número dois vão fazer 2 vezes 22 10 vezes lembra que no começo 

 Determinando determinamos o modo então se o resultado dessa multiplicação for maior que o modo aplicamos um módulo nele e essa é a mensagem encriptado agora para decapitar pegamos essa mensagem de novo caracter a caracter multiplicamos ela por ela por ela mesmo quatro vezes que a chave pública do nosso exemplo repetindo-se o número fumar que o modo aplicamos um modo o número eo resultado vai ser a mensagem de quitada 

 Esse é o poder da aritmética modular e quantas vezes vão precisar multiplicar cada caracter na mensagem lembro que eu falei que a gente gera chave de 4096 bits isso é 2 elevado 4096 que vai dar um número da ordem de mil 133 diz é um número astronômico nenhuma calculadora nem só linguagem favorita vai conseguir multiplicar mais calma não vamos usar esse número são não sempre temos um módulo ele lembra vai 

 Ser o número um módulo n ainda assim é um número usam mas ordem de grandeza menor e vamos multiplicar cada caracter mensagem levado esse número usam módulo n voltando ao exemplo é assim que a globalsign usa a chave privada dela para assinar a chave pública da alice e ela coloca o resultado que é a assinatura num certificado x 509 que ali se pode agora mandar pro bob o bob confina globalsign e tem a chave pública dela 

 Pré instalado na máquina corte com a chave pública a globalsign ele pode de captar a mensagem do certificado da alice ea chave pública dela dentro com isso o bob pode confiar na li se agora o blog pode enviar mensagens com segurança para alice para isso ele pode usar a chave pública da lista para encriptar uma senha secreta e só ali só poder de captar com a chave privada que só ela tem pronto como and fiel ambos os participantes 

 Possuem a mesma chave simétrica para iniciar uma conversa segura infectada podemos usar um isp para trafegar mensagens encriptadas de tudo isso temos alguns problemas no caso do dfi elma sozinho ele não tem esse mecanismo de searas eo terceiro de confiança para assinar as chaves públicas portanto não tem como garantir a identidade dos participantes com sts ou no caso o rc ar que é mais usado ambos os participantes têm chaves para 

 Criadas e pré assinadas e eles podem fazer esse processo de aperto de mão rende sheik para validar a identidade se o bob consegue abrir identidade da alice com a chave pública da globalsign sabemos que o bob confira globalsign e a globalsign confia na li se então por consequência o bob pode confiar na alice e agora temos autenticação comprovada mas por que usar em s para encriptar comunicação em vez de só usar s/a direto pra fazer toda a equipe da ação porque é 

 Esse é computacionalmente muito caro as chaves são enormes de 4096 bits e tem este processo indicou a mente pesado de multiplicação carácter a caracter pelo módulo da chave de 4096 bits reenviavam encriptar um stream netflix vsa por isso trocamos porém s que sabemos que é rápido e até acelerado via hardware no cpu além disso temos outro problema for de se cresce digamos que no futuro alguém de fato 

 Construir um computador quântico de mais de 4 mil clubes e execute o algoritmo de fora agora toda a comunicação do passado que usou as mesmas chaves assimétrica estão comprometidas as chaves são a identidade das pessoas e as raramente mudam então tudo que foi captado nelas poderia ser detectado no futuro por isso falamos que é esse a não tem flor de se cresce mas disse helman tem porque a idéia é gerar novas chaves secretas aquela nova sessão 

 Então o que a gente tem aqui e se usarmos rsa para gerar chaves assimétricas certificados x quais 509 para ter as chaves assinados por uma certa todos confiam com isso podemos autenticar a identidade dos participantes daí podemos usar de fiel mas para trocar segredos que nunca tráfego e finalmente podemos usar e east para fechar uma conexão segura e rápida em resumo bem resumido é isso que o pls o que chamamos de sl faz e em outras 

 Combinações é o que o ssh também faz no caso do sfh você usa a ferramenta ssh atingem para gerar o par de chaves da equipe à sua chave pública para o arquivo autorais e de 15 no servidor agora quando tentar se conectar no servidor ele pode até indicar sua identidade no caso mais simples não precisa de umas e ar porque se achava e pública está no servidor alguém de confiança teve que 

 Colocar lá e isso já é suficiente para servir de autenticação é como funciona no caso do hit run e também dando no caso de tls quanto ssh existe uma etapa que é a negociação dos sites eles não são só os iphone acho que eu não disse mas chamamos esses algoritmos de criptografia de saias quando eles fazem o hands sheik vidor envia uma lista de combinações de sites que ele suporta o navegador ver sua própria lista eles escolhem uma 

 Combinação que ambos suportam isso é um site twitch as combinações da lista são como esse pls receber hrs a wi fi e r 25 meia gcm chá 384 o tamanho de letrinhas mas agora acho que você reconhece quase tudo tls o protocolo e cnh é elite que corvi df é uma efeméride fiel você já sabe ele te corvo falar já s a é o sistema de autenticação com chávez assimétricas com acabei de falar em r 256 como equitação é ser feita gcm modo de execução do oe é chamado galo 

 Acautelar monde que também vai ficar de azar e finalmente chá 384 que o algoritmo de haxixe mec que vai ser usado para verificação de integridade dos dados sobre gcm você precisa entender que todo o algoritmo de encriptação de chave simétrica tem customizações para serem mais flexíveis por exemplo um erro ao usar tripple 10 é usar ele modo receber que é o padrão nesse modo inicializa um vector o hiv é 

 Nulo e seu rodar a mesma mensagem pelo tripo 10 ele sempre vai gerar o mesmo valor infectado mas adicionando a iv na operação do primeiro bloco não aconteceu uma avalanche porque o bloco seguinte usa o resultado do bloco anterior como eu já expliquei no ataque de extensão de comprimento daí o resultado é infectado vai ser bem diferente pra toda vez que você mudar o hiv é mesmo como a idéia de um solte 

 Quando geramos restos para gravar no banco como também os pequenos usar o hiv é o modo chamado de sibbi se que é o recomendado nutre por dez o rs também têm modos ms sem entrar em muitos detalhes o modus mct esse requisito de um bloco anterior influenciou bloco seguinte em cadeia por isso não tem como mudar em paralelo já o modo disse m é um tipo de computador ea característica que você pode interpretar blocos em paralelo 

 Tornando o processo mais rápido além disso o gcm tem características que tornam a encriptação mais segura também daí você pode usar uma chave menor do que em si bc ou seja em vez de usar chávez de 256 bits pode usar uma de 128 e ter relativamente o mesmo nível de segurança você já deve ter entendido que quanto menor a chave - trabalhos algoritmos tensão ordem de grandeza - multiplicações em comunicação via tls em 

 Sites seguros você gostaria que a comunicação fosse segura mas também fosse rápida por isso existe a opção de escolher em sgm agora esse o ept kickoff em resumo resumindo estamos falando literalmente de uma função que gera um gráfico parecido com essa aqui do lado e isso é uma curva elíptica tem bastante matemática para entender as propriedades dessa curva mas o importante é que escolheram os dois pontos quaisquer nessa curva e traçar uma linha reta ela 

 Sempre vai ter seccionar um terceiro ponto um dos pontos da linha que escolhemos vai ser a chave privada e o ponto de intersecção vai ser a chave pública sim curvas e políticas são usadas para gerar chaves assimétricas lembro que no caso de rs ao processo comece escolhendo dois números primos gigantes aleatórios e depois faz várias derivações para chegar na chave privada aqui de forma simplificada é traçar uma 

 Linha em cima do gráfico e temos nossas chaves a propriedade importante é que as chaves gerados através de curvelo lítica são mais resistentes a tentativa de faturar os primos com quadrat que se vive em general norfil de civis elas são técnicas matemáticas para tentar faturar o número usam os prêmios correspondentes sem recorrer à força bruta mesmo sem computador quântico e chora existem outras tentativas matemáticas 

 Para tentar chegar na faturação de primos não é prático e muito menos rápido então a calma e se seus portos e muitos ainda estão seguros a geração de chaves via cubas e políticas cria chávez ainda mais forte do que o hsa normal consegue criar graças às propriedades dessa curva portanto e cdh e o que é isso e lipstick carvide fiel mann e fhemeron lembro que eu falei que só definirá uma sozinha pode sofrer ataque de man in the 

 Middle e precisamos ao com o sts no caso à parte do elipse korb substitui a necessidade dsts e providencia autenticação ao de ferro e alma e lembram como eu falei que as chaves do hsa sofre de fora desse curso porque as chaves nunca mudam por isso tem um efeito no nome de si porque eles geram chaves assimétricas para cada sessão e depois elas são descartadas assim mesmo se um dia alguém quebrar chávez que eu estou usando a minha seção 

 De forma errada e agora o atacante não vai conseguir quebrar chaves das sessões do passado porque eles usaram chaves efêmeras agora combinamos disse helman com chávez efêmeras venha curva ele pratica para trocar segredos e podemos combinar com esse apagar antiga identidade e continuamos usando o ie-s para encriptar os dados em si com as chaves trocados com difícil e alma agora sim esse é mais ou menos o tns que você pode conhecer com sl que todo o site 

 Aplicativo usa hoje em dia chávez gerados através de curitiba estão sendo adotados cada vez mais é isso que é usado no algoritmo do bitcoin para gerar suas chaves a apple usa no e mestres da vida empresas como dia nem sequer viu neném bns e como vimos nas safras suíte navegadores eles também já suportam e mesmo ssh hoje e recomenda se criar chaves com é de 255 19 aliás ele tem esse nome porque usa 

 Com 255 19 que é uma curva e política se você viu essa recomendação em algum tutorial talvez não tenha entendido até hoje porque manda usar 7 255 19 e vg s a e porque o tamanho da chave é menor de 256 bits em vez de 4096 que se recomenda para essa é agora você deve ter entendido como eu falei antes as chaves da cor política são mais fortes e por isso podem ser menores e sendo menor você também já sabe muito menos multiplicações o que significa uma 

 Encriptação mais rápida com o aumento na adoção na maioria dos lugares hoje em dia se for gerar a chávez com ssh kigen escolha é de 255 19 em vez do rs alguém chave por exemplo suporta e você vai notar com uma chave pública que ele gera é bem mais compacta justamente porque a chave é menor e agora você consegue entender todas as letras as que aparecem no site ou tweets dos navegadores 

 De qualquer forma mesmo curvas e políticas ainda não são resistentes ao futuro ataque com schor em computadores quânticos mas como eu expliquei no episódio anterior ainda estamos bem longe disso existem vários algoritmos novos na categoria de pós quânticos que não dependem da dificuldade de faturar números primos mesmo curvas e políticas continuam sendo suscetíveis a ataques de um possível futuro computador quântico também mas 

 Existe uma evolução disso que é o super singla a soja ligraf para fazendo da wikipédia gráficos de es hoje em dia super singulares são classes de expansões de gráficos que aparecem em computação da teoria de números e foram aplicados em que a fotografia de cor verde tica os vértices representam curvas e políticas super singulares sobre campos finitos e as bordas representam e geniais entre curvas pronto fui eu não consigo nem ter um 

 Insight de como isso funciona mais uma das propriedades importantes é que ele consegue ser mais seguro ainda com chávez ainda menores e é considerado pós quântico quer dizer que é resistente aos algoritmos quânticos repetindo o que eu disse no episódio de supremacia quântica o mundo da criptografia não pretende ficar de braços cruzados esperando o computador quântico chegar o povo tá antecipado e em criptografia você sempre precisa estar um passo à 

 Frente e com isso fechamos o tema de conceitos básicos de criptografia não estou brincando tudo o que eu disse até aqui é o básico do básico de criptografia especialmente se você tem interesse em criptanálise um dos campos da computação onde matemática é absoluto é criptografia mas mesmo sem saber matemática toda a intenção foi expor vocês a todos esses jargões e como ele se relaciona os com os outros eu espero que agora vocês têm 

 Uma noção melhor de onde cada jargão é usado e o que significa quais os pontos fortes e fracos nem por que você não deve sair tentando criar soluções que envolvem criptografia os ataques que eu falei aqui são todos simples os especialistas e hackers white sbac rede estão usando isso e coisas mais avançadas no arsenal deles novamente eu tenho certeza todo mundo ainda tem um monte de dúvidas mas não deixem discute nos comentários abaixo se 

 Curtir um vídeo mantém o joinha compartilhe com seus amigos assim o canal e não deixe de clicar no sine para não perder os próximos episódios a gente se vê até mais