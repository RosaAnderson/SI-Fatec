/*======== Subquery´s - select aninhados =======

### Construção ###*/


#Exemplo#
Quais os produtos que tem o preço de venda menor que o 
preço médio de vendas entre todos os produtos da loja?*/

Código Descritivo Venda 
#Consulta principal
SELECT p.id_produto "Codigo",p.descritivo , p.venda
FROM produtos p
WHERE p.venda > (SELECT AVG(venda) FROM produtos)

#SubConsulta:
/*Qual é a média dos preços de venda? */
SELECT AVG(venda) FROM produtos


SELECT ....., (select...)
FROM (select..) INNER JOIN produtos
WHERE param IN (select...)
GROUP BY
HAVING param > (SELECT ....)

/*Regras para Subconsultas:

Podem ser muito úteis quando é preciso selecionar dados de uma 
tabela com uma condição que dependa da própria tabela.

É possível utilizar uma subquery em várias 
cláusulas: SELECT, WHERE, HAVING e FROM.
Operadores pode ser de 2 tipos:
◦ Operadores de Uma Linha (=, >, >=, <, <=, <>).
◦ Operadores de Múltiplas Linhas (IN).

/* Exercicios */

/*Exerc2. Criar uma query para listar todos os vendedores
que totalizaram suas vendas com um valor maior do que a 
media de vendas de todos os vendedor */ 

Codigo           Nome          TotalVendas

#Consulta principal
SELECT *
FROM
(SELECT v.id_vendedor "Codigo", v.nome "Nome",
      SUM(nf.valor) "TotalVendas"
FROM vendedores v INNER JOIN nf_vendas nf
ON (v.id_vendedor=nf.id_vendedor)
GROUP BY v.id_vendedor
HAVING totalvendas > (SELECT AVG(valor) FROM nf_vendas)) T
WHERE totalvendas > 200



#subquery

/*Exerc3.Listar todos os clientes com seus 
respectivos totais comprados a vista e a prazo 
de acordo com o layout abaixo.*/
Codigo    Nome    Avista  Aprazo  Totalgeral
(consulta princ)  (sub1)  (sub2)  (sub3)

#Consulta principal
SELECT c.id_cliente "Código", c.nome,
  (SELECT SUM(valor)
   FROM nf_vendas
   WHERE id_fp = 1 AND id_cliente=c.id_cliente) "Avista",
  (SELECT SUM(valor)
   FROM nf_vendas
   WHERE id_fp = 2 AND id_cliente=c.id_cliente) "Aprazo",
  (SELECT SUM(valor)
   FROM nf_vendas
   WHERE id_cliente=c.id_cliente) "Totalgeral"
FROM clientes c

#Sub1
SELECT SUM(valor)
FROM nf_vendas
WHERE id_fp = 1 AND id_cliente=1


#Sub2
SELECT SUM(valor)
FROM nf_vendas
WHERE id_fp = 2 AND id_cliente=1


#Sub3

/*Exerc4.Listar todos os vendedores com seus 
respectivos totais vendidos a vista e a prazo 
de acordo com o layout 
abaixo.*/
Codigo    Nome    Avista   Aprazo   Totalgeral

SELECT v.id_vendedor "Código", v.nome "Nome",
   IFNULL((SELECT SUM(valor)
    FROM nf_vendas
    WHERE id_fp =1 AND id_vendedor=v.id_vendedor),0) "Avista",
   IFNULL((SELECT SUM(valor)
    FROM nf_vendas
    WHERE id_fp =2 AND id_vendedor=v.id_vendedor),0) "Aprazo",
   IFNULL((SELECT SUM(valor)
    FROM nf_vendas
    WHERE id_vendedor=v.id_vendedor),0) "Totalgeral"
FROM vendedores v

/*Exerc5.Criar uma query que apresente o total de 
alunos do sexo feminino e masculino de cada curso 
da faculdade*/

Código   Curso   TotalH   TotalM   TotalGeral

SELECT c.id_curso "Código", c.descritivo "Curso",
 (SELECT COUNT(id_curso)
  FROM alunos WHERE sexo="M" AND id_curso=c.id_curso) "TotalH ",
 (SELECT COUNT(id_curso)
  FROM alunos WHERE sexo="F" AND id_curso=c.id_curso) "TotalM ",
 (SELECT COUNT(id_curso)
  FROM alunos WHERE id_curso=c.id_curso) "TotalGeral"
FROM cursos c





/*Exerc6.Escreva uma consulta para visualizar o 
produto mais barato e o mais caro da loja.*/
codigo        Descritivo        Venda
SELECT  id_produto "Código", descritivo, venda
FROM produtos 
WHERE venda = (SELECT MIN(venda) FROM produtos)
UNION 
SELECT  id_produto "Código", descritivo, venda
FROM produtos 
WHERE venda = (SELECT MAX(venda) FROM produtos)

/*Exerc7.Liste todos os alunos que possuem idade maior ou 
igual a média das idades entre todos os alunos da faculdade.*/
media = AVG(YEAR(CURRENT_DATE)-YEAR(datan))
idade = YEAR(CURRENT_DATE)-YEAR(datan)
#Consulta principal
Código   Nome   Idade
SELECT id_aluno "Código", nome "Nome", 
       YEAR(CURRENT_DATE)-YEAR(datan) "Idade"
FROM alunos
WHERE YEAR(CURRENT_DATE)-YEAR(datan) 
         >= (SELECT AVG(YEAR(CURRENT_DATE)-YEAR(datan)) 
             FROM alunos)

#Subquery
SELECT AVG(YEAR(CURRENT_DATE)-YEAR(datan)) 
FROM alunos
/*Exerc8.Criar uma query para listar todos os alunos cuja 
media entre suas disciplinas seja menor do que a media geral 
da faculdade. */ 

Codigo    Nome    Curso    Media_Aluno    Média_geral

#Consulta principal
SELECT a.id_aluno "Código", a.nome "Nome", 
       c.descritivo "Curso", AVG(ad.nota) "MediaAluno",
       (SELECT AVG(nota) FROM alunos_disciplinas) "MediaGeral"
FROM alunos a INNER JOIN cursos c
ON (a.id_curso=c.id_curso) INNER JOIN alunos_disciplinas ad
ON (a.id_aluno=ad.id_aluno)
GROUP BY a.id_aluno
HAVING AVG(ad.nota) < (SELECT AVG(nota) 
                       FROM alunos_disciplinas)

#Subquery - Média geral
SELECT AVG(nota) FROM alunos_disciplinas







/*Exerc9.A Faculdade deseja dar um desconto de 10% na mensalidade 
para alunos que cursam mais do que 3 disciplinas no semestre. Criar 
uma query que apresente um relatório dos alunos que receberão o desconto.

Codigo   Nome    Curso    Valor_Mensalidade     Valor_com_Desconto

                       

/*Exerc10.Criar uma query para reajustar em 10% o salario 
de todos os funcionarios com numero de dependentes maior 
do que 2.*/




